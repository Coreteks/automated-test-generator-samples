<?php

namespace tests;

use CI_Output;
use Mockery as m;

class CI_OutputTest extends \PHPUnit_Framework_TestCase
{
/**
* @var \CI_Output
*/
protected $cI_Output;

public function setUp()
{
    parent::setUp();

    $this->cI_Output = new \CI_Output();
}

public function testGet_output0()
{
    // TODO: Your mock expectations here

    $actual = $this->cI_Output->get_output();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSet_output0()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    $actual = $this->cI_Output->set_output($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAppend_output0()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    $actual = $this->cI_Output->append_output($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSet_header0()
{
    $header = m::mock('UntypedParameter_header_');
    $replace = m::mock('UntypedParameter_replace_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($this->_zlib_oc && \strncasecmp($header, 'content-length', 14) === 0) == false (line 222)

    $actual = $this->cI_Output->set_header($header, $replace);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSet_header1()
{
    $header = m::mock('UntypedParameter_header_');
    $replace = m::mock('UntypedParameter_replace_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($this->_zlib_oc && \strncasecmp($header, 'content-length', 14) === 0) == true (line 222)

    $actual = $this->cI_Output->set_header($header, $replace);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSet_content_type0()
{
    $mime_type = m::mock('UntypedParameter_mime_type_');
    $charset = m::mock('UntypedParameter_charset_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\strpos($mime_type, '/') === \FALSE) == false (line 242)
    // if (empty($charset)) == false (line 260)

    $actual = $this->cI_Output->set_content_type($mime_type, $charset);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSet_content_type1()
{
    $mime_type = m::mock('UntypedParameter_mime_type_');
    $charset = m::mock('UntypedParameter_charset_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\strpos($mime_type, '/') === \FALSE) == false (line 242)
    // if (empty($charset)) == true (line 260)

    $actual = $this->cI_Output->set_content_type($mime_type, $charset);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSet_content_type2()
{
    $mime_type = m::mock('UntypedParameter_mime_type_');
    $charset = m::mock('UntypedParameter_charset_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\strpos($mime_type, '/') === \FALSE) == true (line 242)
    // if (isset($this->mimes[$extension])) == false (line 247)
    // if (empty($charset)) == false (line 260)

    $actual = $this->cI_Output->set_content_type($mime_type, $charset);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSet_content_type3()
{
    $mime_type = m::mock('UntypedParameter_mime_type_');
    $charset = m::mock('UntypedParameter_charset_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\strpos($mime_type, '/') === \FALSE) == true (line 242)
    // if (isset($this->mimes[$extension])) == false (line 247)
    // if (empty($charset)) == true (line 260)

    $actual = $this->cI_Output->set_content_type($mime_type, $charset);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSet_content_type4()
{
    $mime_type = m::mock('UntypedParameter_mime_type_');
    $charset = m::mock('UntypedParameter_charset_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\strpos($mime_type, '/') === \FALSE) == true (line 242)
    // if (isset($this->mimes[$extension])) == true (line 247)
    // if (\is_array($mime_type)) == false (line 251)
    // if (empty($charset)) == false (line 260)

    $actual = $this->cI_Output->set_content_type($mime_type, $charset);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSet_content_type5()
{
    $mime_type = m::mock('UntypedParameter_mime_type_');
    $charset = m::mock('UntypedParameter_charset_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\strpos($mime_type, '/') === \FALSE) == true (line 242)
    // if (isset($this->mimes[$extension])) == true (line 247)
    // if (\is_array($mime_type)) == false (line 251)
    // if (empty($charset)) == true (line 260)

    $actual = $this->cI_Output->set_content_type($mime_type, $charset);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSet_content_type6()
{
    $mime_type = m::mock('UntypedParameter_mime_type_');
    $charset = m::mock('UntypedParameter_charset_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\strpos($mime_type, '/') === \FALSE) == true (line 242)
    // if (isset($this->mimes[$extension])) == true (line 247)
    // if (\is_array($mime_type)) == true (line 251)
    // if (empty($charset)) == false (line 260)

    $actual = $this->cI_Output->set_content_type($mime_type, $charset);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSet_content_type7()
{
    $mime_type = m::mock('UntypedParameter_mime_type_');
    $charset = m::mock('UntypedParameter_charset_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\strpos($mime_type, '/') === \FALSE) == true (line 242)
    // if (isset($this->mimes[$extension])) == true (line 247)
    // if (\is_array($mime_type)) == true (line 251)
    // if (empty($charset)) == true (line 260)

    $actual = $this->cI_Output->set_content_type($mime_type, $charset);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_content_type0()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // for (...) == false (line 281)

    $actual = $this->cI_Output->get_content_type();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_content_type1()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // for (...) == true (line 281)
    // if (\sscanf($this->headers[$i][0], 'Content-Type: %[^;]', $content_type) === 1) == false (line 283)
    // for (...) == false (line 281)

    $actual = $this->cI_Output->get_content_type();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_content_type2()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // for (...) == true (line 281)
    // if (\sscanf($this->headers[$i][0], 'Content-Type: %[^;]', $content_type) === 1) == true (line 283)

    $actual = $this->cI_Output->get_content_type();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_header0()
{
    $header = m::mock('UntypedParameter_header_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($headers) or empty($header)) == false (line 309)
    // for (...) == false (line 315)

    $actual = $this->cI_Output->get_header($header);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_header1()
{
    $header = m::mock('UntypedParameter_header_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($headers) or empty($header)) == false (line 309)
    // for (...) == true (line 315)
    // if (\strncasecmp($header, $headers[$c], $l = self::strlen($header)) === 0) == false (line 317)
    // for (...) == false (line 315)

    $actual = $this->cI_Output->get_header($header);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_header2()
{
    $header = m::mock('UntypedParameter_header_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($headers) or empty($header)) == false (line 309)
    // for (...) == true (line 315)
    // if (\strncasecmp($header, $headers[$c], $l = self::strlen($header)) === 0) == true (line 317)

    $actual = $this->cI_Output->get_header($header);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_header3()
{
    $header = m::mock('UntypedParameter_header_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($headers) or empty($header)) == true (line 309)

    $actual = $this->cI_Output->get_header($header);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSet_status_header0()
{
    $code = m::mock('UntypedParameter_code_');
    $text = m::mock('UntypedParameter_text_');

    // TODO: Your mock expectations here

    $actual = $this->cI_Output->set_status_header($code, $text);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testEnable_profiler0()
{
    $val = m::mock('UntypedParameter_val_');

    // TODO: Your mock expectations here

    $actual = $this->cI_Output->enable_profiler($val);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSet_profiler_sections0()
{
    $sections = m::mock('UntypedParameter_sections_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($sections['query_toggle_count'])) == false (line 371)

    $actual = $this->cI_Output->set_profiler_sections($sections);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSet_profiler_sections1()
{
    $sections = m::mock('UntypedParameter_sections_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($sections['query_toggle_count'])) == false (line 371)

    $actual = $this->cI_Output->set_profiler_sections($sections);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSet_profiler_sections2()
{
    $sections = m::mock('UntypedParameter_sections_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($sections['query_toggle_count'])) == true (line 371)

    $actual = $this->cI_Output->set_profiler_sections($sections);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSet_profiler_sections3()
{
    $sections = m::mock('UntypedParameter_sections_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($sections['query_toggle_count'])) == true (line 371)

    $actual = $this->cI_Output->set_profiler_sections($sections);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCache0()
{
    $time = m::mock('UntypedParameter_time_');

    // TODO: Your mock expectations here

    $actual = $this->cI_Output->cache($time);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display0()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display2()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display3()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display4()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display5()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display6()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display7()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display8()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display9()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display10()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display11()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display12()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display13()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display14()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display15()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display16()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display17()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display18()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display19()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display20()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display21()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display22()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display23()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display24()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display25()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display26()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display27()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display28()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display29()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display30()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display31()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display32()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display33()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display34()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display35()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display36()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display37()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display38()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display39()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display40()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display41()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display42()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display43()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display44()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display45()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display46()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display47()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display48()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display49()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display50()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display51()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display52()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display53()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display54()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display55()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display56()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display57()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display58()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display59()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display60()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display61()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display62()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display63()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display64()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display65()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display66()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display67()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display68()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display69()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display70()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display71()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display72()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display73()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display74()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display75()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display76()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display77()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display78()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display79()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display80()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display81()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display82()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display83()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display84()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display85()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display86()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display87()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display88()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display89()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display90()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display91()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display92()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display93()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display94()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display95()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display96()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display97()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display98()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display99()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display100()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display101()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display102()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display103()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display104()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display105()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display106()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display107()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display108()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display109()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display110()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display111()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display112()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display113()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display114()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display115()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display116()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display117()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display118()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display119()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display120()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display121()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display122()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display123()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display124()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display125()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display126()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display127()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display128()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display129()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display130()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display131()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display132()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display133()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display134()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display135()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display136()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display137()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display138()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display139()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display140()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display141()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display142()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display143()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display144()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display145()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display146()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display147()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display148()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display149()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display150()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display151()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display152()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display153()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display154()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display155()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display156()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display157()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display158()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display159()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display160()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display161()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display162()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display163()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display164()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display165()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display166()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display167()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display168()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display169()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display170()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display171()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display172()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display173()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display174()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display175()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display176()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display177()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display178()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display179()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display180()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display181()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display182()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display183()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display184()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display185()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display186()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display187()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display188()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display189()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display190()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display191()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display192()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display193()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display194()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display195()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display196()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display197()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display198()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display199()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display200()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display201()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display202()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display203()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display204()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display205()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display206()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display207()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display208()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display209()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display210()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display211()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display212()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display213()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display214()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display215()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display216()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display217()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display218()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display219()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display220()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display221()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display222()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display223()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display224()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display225()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display226()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display227()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display228()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display229()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display230()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display231()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display232()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display233()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display234()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display235()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display236()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display237()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display238()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display239()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display240()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display241()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display242()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display243()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display244()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display245()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display246()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display247()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display248()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display249()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display250()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display251()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display252()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display253()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display254()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display255()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display256()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display257()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display258()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display259()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display260()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display261()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display262()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display263()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display264()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display265()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display266()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display267()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display268()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display269()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display270()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display271()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display272()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display273()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display274()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display275()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display276()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display277()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display278()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display279()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display280()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display281()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display282()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display283()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display284()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display285()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display286()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display287()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display288()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display289()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display290()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display291()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display292()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display293()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display294()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display295()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display296()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display297()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display298()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display299()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display300()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display301()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display302()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display303()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display304()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display305()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display306()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display307()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display308()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display309()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display310()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display311()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display312()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display313()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display314()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display315()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display316()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display317()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display318()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display319()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display320()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display321()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display322()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display323()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display324()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display325()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display326()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display327()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display328()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display329()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display330()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display331()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display332()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display333()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display334()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display335()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display336()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display337()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display338()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display339()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display340()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display341()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display342()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display343()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display344()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display345()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display346()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display347()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display348()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display349()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display350()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display351()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display352()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display353()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display354()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display355()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display356()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display357()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display358()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display359()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display360()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display361()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display362()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display363()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display364()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display365()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display366()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display367()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display368()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display369()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display370()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display371()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display372()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display373()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display374()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display375()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display376()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display377()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display378()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display379()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display380()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display381()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display382()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display383()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display384()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display385()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display386()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display387()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display388()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display389()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display390()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display391()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display392()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display393()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display394()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display395()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display396()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display397()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display398()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display399()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display400()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display401()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display402()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display403()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display404()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display405()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display406()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display407()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display408()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display409()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display410()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display411()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display412()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display413()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display414()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display415()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display416()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display417()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display418()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display419()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display420()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display421()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display422()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display423()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display424()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display425()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display426()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display427()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display428()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display429()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display430()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display431()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display432()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display433()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display434()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display435()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display436()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display437()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display438()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display439()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display440()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display441()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display442()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display443()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display444()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display445()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display446()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display447()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display448()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display449()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display450()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display451()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display452()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display453()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display454()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display455()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display456()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display457()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display458()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display459()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display460()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display461()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display462()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display463()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display464()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display465()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display466()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display467()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display468()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display469()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display470()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display471()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display472()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display473()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display474()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display475()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display476()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display477()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display478()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display479()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display480()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display481()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display482()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display483()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display484()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display485()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display486()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display487()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display488()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display489()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display490()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display491()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display492()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display493()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display494()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display495()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display496()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display497()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display498()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display499()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display500()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display501()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display502()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display503()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display504()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display505()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display506()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display507()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display508()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display509()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display510()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display511()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display512()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display513()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display514()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display515()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display516()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display517()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display518()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display519()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display520()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display521()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display522()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display523()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display524()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display525()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display526()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display527()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display528()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display529()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display530()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display531()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display532()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display533()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display534()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display535()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display536()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display537()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display538()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display539()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display540()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display541()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display542()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display543()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display544()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display545()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display546()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display547()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display548()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display549()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display550()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display551()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display552()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display553()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display554()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display555()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display556()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display557()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display558()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display559()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display560()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display561()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display562()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display563()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display564()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display565()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display566()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display567()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display568()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display569()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display570()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display571()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display572()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display573()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display574()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display575()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display576()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display577()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display578()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display579()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display580()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display581()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display582()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display583()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display584()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display585()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display586()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display587()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display588()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display589()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display590()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display591()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display592()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display593()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display594()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display595()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display596()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display597()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display598()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display599()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display600()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display601()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display602()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display603()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display604()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display605()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display606()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display607()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display608()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display609()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display610()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display611()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display612()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display613()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display614()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display615()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display616()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display617()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display618()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display619()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display620()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display621()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display622()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display623()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == false (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display624()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display625()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display626()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display627()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display628()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display629()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display630()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display631()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display632()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display633()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display634()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display635()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display636()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display637()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display638()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display639()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display640()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display641()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display642()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display643()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display644()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display645()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display646()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display647()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display648()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display649()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display650()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display651()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display652()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display653()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display654()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display655()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display656()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display657()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display658()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display659()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display660()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display661()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display662()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display663()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display664()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display665()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display666()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display667()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display668()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display669()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display670()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display671()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display672()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display673()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display674()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display675()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display676()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display677()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display678()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display679()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display680()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display681()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display682()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display683()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display684()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display685()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display686()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display687()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display688()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display689()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display690()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display691()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display692()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display693()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display694()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display695()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display696()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display697()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display698()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display699()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display700()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display701()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display702()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display703()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display704()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display705()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display706()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display707()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display708()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display709()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display710()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display711()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display712()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display713()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display714()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display715()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display716()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display717()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display718()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display719()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display720()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display721()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display722()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display723()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display724()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display725()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display726()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display727()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display728()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display729()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display730()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display731()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display732()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display733()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display734()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display735()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display736()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display737()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display738()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display739()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display740()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display741()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display742()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display743()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display744()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display745()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display746()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display747()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display748()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display749()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display750()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display751()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display752()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display753()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display754()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display755()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display756()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display757()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display758()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display759()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display760()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display761()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display762()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display763()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display764()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display765()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display766()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display767()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display768()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display769()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display770()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display771()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display772()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display773()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display774()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display775()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display776()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display777()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display778()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display779()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display780()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display781()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display782()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display783()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display784()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display785()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display786()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display787()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display788()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display789()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display790()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display791()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display792()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display793()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display794()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display795()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display796()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display797()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display798()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display799()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display800()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display801()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display802()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display803()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display804()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display805()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display806()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display807()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display808()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display809()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display810()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display811()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display812()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display813()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display814()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display815()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display816()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display817()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display818()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display819()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display820()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display821()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display822()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display823()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display824()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display825()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display826()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display827()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display828()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display829()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display830()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display831()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display832()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display833()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display834()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display835()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display836()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display837()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display838()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display839()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display840()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display841()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display842()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display843()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display844()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display845()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display846()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display847()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display848()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display849()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display850()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display851()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display852()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display853()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display854()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display855()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display856()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display857()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display858()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display859()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display860()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display861()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display862()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display863()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display864()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display865()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display866()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display867()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display868()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display869()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display870()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display871()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display872()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display873()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display874()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display875()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display876()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display877()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display878()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display879()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display880()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display881()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display882()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display883()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display884()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display885()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display886()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display887()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display888()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display889()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display890()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display891()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display892()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display893()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display894()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display895()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display896()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display897()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display898()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display899()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display900()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display901()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display902()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display903()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display904()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display905()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display906()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display907()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display908()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display909()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display910()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display911()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display912()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display913()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display914()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display915()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display916()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display917()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display918()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display919()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display920()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display921()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display922()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display923()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display924()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display925()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display926()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display927()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display928()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display929()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display930()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display931()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display932()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display933()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display934()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display935()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == false (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display936()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display937()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display938()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display939()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display940()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display941()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display942()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display943()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display944()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display945()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display946()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display947()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display948()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display949()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display950()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display951()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display952()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display953()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display954()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display955()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display956()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display957()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display958()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display959()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display960()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display961()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display962()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display963()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display964()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display965()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display966()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display967()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display968()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display969()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display970()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display971()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display972()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display973()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display974()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display975()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display976()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display977()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display978()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display979()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display980()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display981()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display982()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display983()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display984()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display985()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display986()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display987()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display988()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display989()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display990()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display991()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display992()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display993()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display994()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display995()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display996()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display997()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display998()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display999()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1000()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1001()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1002()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1003()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1004()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1005()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1006()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1007()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1008()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1009()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1010()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1011()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1012()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1013()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1014()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1015()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1016()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1017()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1018()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1019()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1020()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1021()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1022()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1023()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1024()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1025()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1026()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1027()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1028()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1029()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1030()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1031()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1032()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1033()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1034()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1035()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1036()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1037()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1038()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1039()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1040()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1041()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1042()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1043()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1044()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1045()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1046()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1047()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1048()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1049()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1050()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1051()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1052()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1053()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1054()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1055()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1056()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1057()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1058()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1059()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1060()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1061()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1062()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1063()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1064()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1065()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1066()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1067()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1068()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1069()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1070()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1071()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1072()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1073()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1074()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1075()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1076()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1077()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1078()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1079()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1080()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1081()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1082()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1083()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1084()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1085()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1086()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1087()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1088()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1089()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1090()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1091()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == false (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1092()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1093()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1094()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1095()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1096()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1097()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1098()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1099()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1100()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1101()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1102()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1103()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1104()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1105()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1106()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1107()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1108()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1109()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1110()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1111()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1112()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1113()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1114()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1115()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1116()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1117()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1118()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1119()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1120()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1121()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1122()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1123()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1124()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1125()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1126()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1127()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1128()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1129()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1130()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1131()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1132()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1133()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1134()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1135()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1136()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1137()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1138()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1139()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1140()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1141()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1142()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1143()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1144()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1145()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1146()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1147()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1148()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1149()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1150()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1151()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1152()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1153()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1154()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1155()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1156()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1157()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1158()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1159()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1160()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1161()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1162()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1163()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1164()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1165()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1166()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1167()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1168()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1169()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == false (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1170()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1171()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1172()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1173()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1174()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1175()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1176()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1177()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1178()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1179()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1180()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1181()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1182()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1183()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1184()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1185()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1186()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1187()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1188()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1189()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1190()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1191()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1192()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1193()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1194()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1195()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1196()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1197()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1198()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1199()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1200()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1201()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1202()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1203()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1204()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1205()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1206()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1207()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1208()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1209()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1210()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1211()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1212()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1213()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1214()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1215()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1216()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1217()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1218()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1219()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1220()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1221()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == false (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1222()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1223()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1224()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1225()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1226()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1227()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1228()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1229()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1230()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1231()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1232()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1233()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1234()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1235()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1236()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == false (line 513)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1237()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1238()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1239()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1240()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == false (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1241()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1242()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == false (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1243()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == false (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1244()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == false (line 486)
    // if ($this->enable_profiler === \TRUE) == true (line 513)
    // if (!empty($this->_profiler_sections)) == true (line 516)
    // if ($count > 0) == true (line 524)
    // if (\method_exists($CI, '_output')) == true (line 532)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1245()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == false (line 488)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1246()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == false (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display1247()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\class_exists('CI_Controller', \FALSE)) == true (line 424)
    // if ($output === \NULL) == true (line 432)
    // if ($this->cache_expiration > 0 && isset($CI) && !\method_exists($CI, '_output')) == true (line 442)
    // if ($this->parse_exec_vars === \TRUE) == true (line 454)
    // if (isset($CI) && $this->_compress_output === \TRUE && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 463)
    // if (\count($this->headers) > 0) == true (line 473)
    // if (!isset($CI)) == true (line 486)
    // if ($this->_compress_output === \TRUE) == true (line 488)
    // if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && \strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== \FALSE) == true (line 490)

    $actual = $this->cI_Output->_display($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache0()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 569)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == false (line 599)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache1()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 569)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == false (line 599)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache2()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 569)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == false (line 599)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == false (line 621)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache3()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 569)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == false (line 599)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == false (line 621)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache4()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 569)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == false (line 599)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == true (line 621)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache5()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 569)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == false (line 599)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == true (line 621)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache6()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 569)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == false (line 603)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache7()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 569)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == false (line 603)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache8()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 569)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == false (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == false (line 621)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache9()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 569)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == false (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == false (line 621)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache10()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 569)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == false (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == true (line 621)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache11()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 569)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == false (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == true (line 621)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache12()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 569)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == true (line 603)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache13()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 569)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == true (line 603)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache14()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 569)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == true (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == false (line 621)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache15()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 569)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == true (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == false (line 621)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache16()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 569)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == true (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == true (line 621)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache17()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 569)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == true (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == true (line 621)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache18()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 569)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == true (line 589)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache19()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 569)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == true (line 583)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache20()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == false (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == false (line 599)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache21()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == false (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == false (line 599)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache22()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == false (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == false (line 599)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == false (line 621)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache23()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == false (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == false (line 599)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == false (line 621)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache24()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == false (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == false (line 599)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == true (line 621)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache25()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == false (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == false (line 599)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == true (line 621)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache26()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == false (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == false (line 603)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache27()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == false (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == false (line 603)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache28()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == false (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == false (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == false (line 621)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache29()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == false (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == false (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == false (line 621)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache30()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == false (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == false (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == true (line 621)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache31()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == false (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == false (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == true (line 621)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache32()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == false (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == true (line 603)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache33()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == false (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == true (line 603)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache34()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == false (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == true (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == false (line 621)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache35()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == false (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == true (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == false (line 621)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache36()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == false (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == true (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == true (line 621)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache37()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == false (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == true (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == true (line 621)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache38()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == false (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == true (line 589)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache39()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == false (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == true (line 583)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache40()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == true (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == false (line 599)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache41()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == true (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == false (line 599)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache42()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == true (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == false (line 599)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == false (line 621)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache43()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == true (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == false (line 599)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == false (line 621)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache44()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == true (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == false (line 599)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == true (line 621)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache45()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == true (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == false (line 599)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == true (line 621)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache46()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == true (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == false (line 603)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache47()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == true (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == false (line 603)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache48()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == true (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == false (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == false (line 621)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache49()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == true (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == false (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == false (line 621)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache50()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == true (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == false (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == true (line 621)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache51()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == true (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == false (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == true (line 621)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache52()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == true (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == true (line 603)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache53()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == true (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == true (line 603)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache54()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == true (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == true (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == false (line 621)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache55()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == true (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == true (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == false (line 621)
    // for (...) == false (line 619)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache56()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == true (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == true (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == true (line 621)
    // if (!\is_int($result)) == false (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache57()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == true (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == false (line 589)
    // if ($this->_compress_output === \TRUE) == true (line 599)
    // if ($this->get_header('content-type') === \NULL) == true (line 603)
    // for (...) == true (line 619)
    // if (($result = \fwrite($fp, self::substr($output, $written))) === \FALSE) == true (line 621)
    // if (!\is_int($result)) == true (line 630)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache58()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == true (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == false (line 583)
    // if (!\flock($fp, \LOCK_EX)) == true (line 589)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache59()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == false (line 559)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 569)
    // if (\is_array($cache_query_string)) == true (line 571)
    // if (!($fp = @\fopen($cache_path, 'w+b'))) == true (line 583)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_write_cache60()
{
    $output = m::mock('UntypedParameter_output_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_dir($cache_path) or !\is_really_writable($cache_path)) == true (line 559)

    $actual = $this->cI_Output->_write_cache($output);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display_cache0()
{
    $CFG = m::mock('UntypedParameter_CFG_');
    $URI = m::mock('UntypedParameter_URI_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (($cache_query_string = $CFG->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 663)
    // if (!\file_exists($filepath) or !($fp = @\fopen($filepath, 'rb'))) == false (line 677)
    // if (!\preg_match('/^(.*)ENDCI--->/', $cache, $match)) == false (line 690)
    // if ($_SERVER['REQUEST_TIME'] >= $expire && \is_really_writable($cache_path)) == false (line 701)

    $actual = $this->cI_Output->_display_cache($CFG, $URI);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display_cache1()
{
    $CFG = m::mock('UntypedParameter_CFG_');
    $URI = m::mock('UntypedParameter_URI_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (($cache_query_string = $CFG->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 663)
    // if (!\file_exists($filepath) or !($fp = @\fopen($filepath, 'rb'))) == false (line 677)
    // if (!\preg_match('/^(.*)ENDCI--->/', $cache, $match)) == false (line 690)
    // if ($_SERVER['REQUEST_TIME'] >= $expire && \is_really_writable($cache_path)) == false (line 701)

    $actual = $this->cI_Output->_display_cache($CFG, $URI);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display_cache2()
{
    $CFG = m::mock('UntypedParameter_CFG_');
    $URI = m::mock('UntypedParameter_URI_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (($cache_query_string = $CFG->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 663)
    // if (!\file_exists($filepath) or !($fp = @\fopen($filepath, 'rb'))) == false (line 677)
    // if (!\preg_match('/^(.*)ENDCI--->/', $cache, $match)) == false (line 690)
    // if ($_SERVER['REQUEST_TIME'] >= $expire && \is_really_writable($cache_path)) == true (line 701)

    $actual = $this->cI_Output->_display_cache($CFG, $URI);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display_cache3()
{
    $CFG = m::mock('UntypedParameter_CFG_');
    $URI = m::mock('UntypedParameter_URI_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (($cache_query_string = $CFG->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 663)
    // if (!\file_exists($filepath) or !($fp = @\fopen($filepath, 'rb'))) == false (line 677)
    // if (!\preg_match('/^(.*)ENDCI--->/', $cache, $match)) == true (line 690)

    $actual = $this->cI_Output->_display_cache($CFG, $URI);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display_cache4()
{
    $CFG = m::mock('UntypedParameter_CFG_');
    $URI = m::mock('UntypedParameter_URI_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (($cache_query_string = $CFG->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 663)
    // if (!\file_exists($filepath) or !($fp = @\fopen($filepath, 'rb'))) == true (line 677)

    $actual = $this->cI_Output->_display_cache($CFG, $URI);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display_cache5()
{
    $CFG = m::mock('UntypedParameter_CFG_');
    $URI = m::mock('UntypedParameter_URI_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (($cache_query_string = $CFG->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 663)
    // if (\is_array($cache_query_string)) == false (line 665)
    // if (!\file_exists($filepath) or !($fp = @\fopen($filepath, 'rb'))) == false (line 677)
    // if (!\preg_match('/^(.*)ENDCI--->/', $cache, $match)) == false (line 690)
    // if ($_SERVER['REQUEST_TIME'] >= $expire && \is_really_writable($cache_path)) == false (line 701)

    $actual = $this->cI_Output->_display_cache($CFG, $URI);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display_cache6()
{
    $CFG = m::mock('UntypedParameter_CFG_');
    $URI = m::mock('UntypedParameter_URI_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (($cache_query_string = $CFG->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 663)
    // if (\is_array($cache_query_string)) == false (line 665)
    // if (!\file_exists($filepath) or !($fp = @\fopen($filepath, 'rb'))) == false (line 677)
    // if (!\preg_match('/^(.*)ENDCI--->/', $cache, $match)) == false (line 690)
    // if ($_SERVER['REQUEST_TIME'] >= $expire && \is_really_writable($cache_path)) == false (line 701)

    $actual = $this->cI_Output->_display_cache($CFG, $URI);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display_cache7()
{
    $CFG = m::mock('UntypedParameter_CFG_');
    $URI = m::mock('UntypedParameter_URI_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (($cache_query_string = $CFG->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 663)
    // if (\is_array($cache_query_string)) == false (line 665)
    // if (!\file_exists($filepath) or !($fp = @\fopen($filepath, 'rb'))) == false (line 677)
    // if (!\preg_match('/^(.*)ENDCI--->/', $cache, $match)) == false (line 690)
    // if ($_SERVER['REQUEST_TIME'] >= $expire && \is_really_writable($cache_path)) == true (line 701)

    $actual = $this->cI_Output->_display_cache($CFG, $URI);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display_cache8()
{
    $CFG = m::mock('UntypedParameter_CFG_');
    $URI = m::mock('UntypedParameter_URI_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (($cache_query_string = $CFG->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 663)
    // if (\is_array($cache_query_string)) == false (line 665)
    // if (!\file_exists($filepath) or !($fp = @\fopen($filepath, 'rb'))) == false (line 677)
    // if (!\preg_match('/^(.*)ENDCI--->/', $cache, $match)) == true (line 690)

    $actual = $this->cI_Output->_display_cache($CFG, $URI);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display_cache9()
{
    $CFG = m::mock('UntypedParameter_CFG_');
    $URI = m::mock('UntypedParameter_URI_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (($cache_query_string = $CFG->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 663)
    // if (\is_array($cache_query_string)) == false (line 665)
    // if (!\file_exists($filepath) or !($fp = @\fopen($filepath, 'rb'))) == true (line 677)

    $actual = $this->cI_Output->_display_cache($CFG, $URI);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display_cache10()
{
    $CFG = m::mock('UntypedParameter_CFG_');
    $URI = m::mock('UntypedParameter_URI_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (($cache_query_string = $CFG->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 663)
    // if (\is_array($cache_query_string)) == true (line 665)
    // if (!\file_exists($filepath) or !($fp = @\fopen($filepath, 'rb'))) == false (line 677)
    // if (!\preg_match('/^(.*)ENDCI--->/', $cache, $match)) == false (line 690)
    // if ($_SERVER['REQUEST_TIME'] >= $expire && \is_really_writable($cache_path)) == false (line 701)

    $actual = $this->cI_Output->_display_cache($CFG, $URI);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display_cache11()
{
    $CFG = m::mock('UntypedParameter_CFG_');
    $URI = m::mock('UntypedParameter_URI_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (($cache_query_string = $CFG->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 663)
    // if (\is_array($cache_query_string)) == true (line 665)
    // if (!\file_exists($filepath) or !($fp = @\fopen($filepath, 'rb'))) == false (line 677)
    // if (!\preg_match('/^(.*)ENDCI--->/', $cache, $match)) == false (line 690)
    // if ($_SERVER['REQUEST_TIME'] >= $expire && \is_really_writable($cache_path)) == false (line 701)

    $actual = $this->cI_Output->_display_cache($CFG, $URI);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display_cache12()
{
    $CFG = m::mock('UntypedParameter_CFG_');
    $URI = m::mock('UntypedParameter_URI_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (($cache_query_string = $CFG->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 663)
    // if (\is_array($cache_query_string)) == true (line 665)
    // if (!\file_exists($filepath) or !($fp = @\fopen($filepath, 'rb'))) == false (line 677)
    // if (!\preg_match('/^(.*)ENDCI--->/', $cache, $match)) == false (line 690)
    // if ($_SERVER['REQUEST_TIME'] >= $expire && \is_really_writable($cache_path)) == true (line 701)

    $actual = $this->cI_Output->_display_cache($CFG, $URI);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display_cache13()
{
    $CFG = m::mock('UntypedParameter_CFG_');
    $URI = m::mock('UntypedParameter_URI_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (($cache_query_string = $CFG->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 663)
    // if (\is_array($cache_query_string)) == true (line 665)
    // if (!\file_exists($filepath) or !($fp = @\fopen($filepath, 'rb'))) == false (line 677)
    // if (!\preg_match('/^(.*)ENDCI--->/', $cache, $match)) == true (line 690)

    $actual = $this->cI_Output->_display_cache($CFG, $URI);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function test_display_cache14()
{
    $CFG = m::mock('UntypedParameter_CFG_');
    $URI = m::mock('UntypedParameter_URI_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (($cache_query_string = $CFG->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 663)
    // if (\is_array($cache_query_string)) == true (line 665)
    // if (!\file_exists($filepath) or !($fp = @\fopen($filepath, 'rb'))) == true (line 677)

    $actual = $this->cI_Output->_display_cache($CFG, $URI);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDelete_cache0()
{
    $uri = m::mock('UntypedParameter_uri_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($cache_path === '') == false (line 736)
    // if (!\is_dir($cache_path)) == false (line 741)
    // if (empty($uri)) == false (line 747)
    // if (!@\unlink($cache_path)) == false (line 766)

    $actual = $this->cI_Output->delete_cache($uri);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDelete_cache1()
{
    $uri = m::mock('UntypedParameter_uri_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($cache_path === '') == false (line 736)
    // if (!\is_dir($cache_path)) == false (line 741)
    // if (empty($uri)) == false (line 747)
    // if (!@\unlink($cache_path)) == true (line 766)

    $actual = $this->cI_Output->delete_cache($uri);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDelete_cache2()
{
    $uri = m::mock('UntypedParameter_uri_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($cache_path === '') == false (line 736)
    // if (!\is_dir($cache_path)) == false (line 741)
    // if (empty($uri)) == true (line 747)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 751)
    // if (!@\unlink($cache_path)) == false (line 766)

    $actual = $this->cI_Output->delete_cache($uri);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDelete_cache3()
{
    $uri = m::mock('UntypedParameter_uri_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($cache_path === '') == false (line 736)
    // if (!\is_dir($cache_path)) == false (line 741)
    // if (empty($uri)) == true (line 747)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 751)
    // if (!@\unlink($cache_path)) == true (line 766)

    $actual = $this->cI_Output->delete_cache($uri);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDelete_cache4()
{
    $uri = m::mock('UntypedParameter_uri_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($cache_path === '') == false (line 736)
    // if (!\is_dir($cache_path)) == false (line 741)
    // if (empty($uri)) == true (line 747)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 751)
    // if (\is_array($cache_query_string)) == false (line 753)
    // if (!@\unlink($cache_path)) == false (line 766)

    $actual = $this->cI_Output->delete_cache($uri);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDelete_cache5()
{
    $uri = m::mock('UntypedParameter_uri_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($cache_path === '') == false (line 736)
    // if (!\is_dir($cache_path)) == false (line 741)
    // if (empty($uri)) == true (line 747)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 751)
    // if (\is_array($cache_query_string)) == false (line 753)
    // if (!@\unlink($cache_path)) == true (line 766)

    $actual = $this->cI_Output->delete_cache($uri);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDelete_cache6()
{
    $uri = m::mock('UntypedParameter_uri_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($cache_path === '') == false (line 736)
    // if (!\is_dir($cache_path)) == false (line 741)
    // if (empty($uri)) == true (line 747)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 751)
    // if (\is_array($cache_query_string)) == true (line 753)
    // if (!@\unlink($cache_path)) == false (line 766)

    $actual = $this->cI_Output->delete_cache($uri);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDelete_cache7()
{
    $uri = m::mock('UntypedParameter_uri_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($cache_path === '') == false (line 736)
    // if (!\is_dir($cache_path)) == false (line 741)
    // if (empty($uri)) == true (line 747)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 751)
    // if (\is_array($cache_query_string)) == true (line 753)
    // if (!@\unlink($cache_path)) == true (line 766)

    $actual = $this->cI_Output->delete_cache($uri);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDelete_cache8()
{
    $uri = m::mock('UntypedParameter_uri_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($cache_path === '') == false (line 736)
    // if (!\is_dir($cache_path)) == true (line 741)

    $actual = $this->cI_Output->delete_cache($uri);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDelete_cache9()
{
    $uri = m::mock('UntypedParameter_uri_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($cache_path === '') == true (line 736)
    // if (!\is_dir($cache_path)) == false (line 741)
    // if (empty($uri)) == false (line 747)
    // if (!@\unlink($cache_path)) == false (line 766)

    $actual = $this->cI_Output->delete_cache($uri);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDelete_cache10()
{
    $uri = m::mock('UntypedParameter_uri_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($cache_path === '') == true (line 736)
    // if (!\is_dir($cache_path)) == false (line 741)
    // if (empty($uri)) == false (line 747)
    // if (!@\unlink($cache_path)) == true (line 766)

    $actual = $this->cI_Output->delete_cache($uri);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDelete_cache11()
{
    $uri = m::mock('UntypedParameter_uri_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($cache_path === '') == true (line 736)
    // if (!\is_dir($cache_path)) == false (line 741)
    // if (empty($uri)) == true (line 747)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 751)
    // if (!@\unlink($cache_path)) == false (line 766)

    $actual = $this->cI_Output->delete_cache($uri);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDelete_cache12()
{
    $uri = m::mock('UntypedParameter_uri_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($cache_path === '') == true (line 736)
    // if (!\is_dir($cache_path)) == false (line 741)
    // if (empty($uri)) == true (line 747)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == false (line 751)
    // if (!@\unlink($cache_path)) == true (line 766)

    $actual = $this->cI_Output->delete_cache($uri);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDelete_cache13()
{
    $uri = m::mock('UntypedParameter_uri_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($cache_path === '') == true (line 736)
    // if (!\is_dir($cache_path)) == false (line 741)
    // if (empty($uri)) == true (line 747)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 751)
    // if (\is_array($cache_query_string)) == false (line 753)
    // if (!@\unlink($cache_path)) == false (line 766)

    $actual = $this->cI_Output->delete_cache($uri);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDelete_cache14()
{
    $uri = m::mock('UntypedParameter_uri_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($cache_path === '') == true (line 736)
    // if (!\is_dir($cache_path)) == false (line 741)
    // if (empty($uri)) == true (line 747)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 751)
    // if (\is_array($cache_query_string)) == false (line 753)
    // if (!@\unlink($cache_path)) == true (line 766)

    $actual = $this->cI_Output->delete_cache($uri);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDelete_cache15()
{
    $uri = m::mock('UntypedParameter_uri_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($cache_path === '') == true (line 736)
    // if (!\is_dir($cache_path)) == false (line 741)
    // if (empty($uri)) == true (line 747)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 751)
    // if (\is_array($cache_query_string)) == true (line 753)
    // if (!@\unlink($cache_path)) == false (line 766)

    $actual = $this->cI_Output->delete_cache($uri);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDelete_cache16()
{
    $uri = m::mock('UntypedParameter_uri_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($cache_path === '') == true (line 736)
    // if (!\is_dir($cache_path)) == false (line 741)
    // if (empty($uri)) == true (line 747)
    // if (($cache_query_string = $CI->config->item('cache_query_string')) && !empty($_SERVER['QUERY_STRING'])) == true (line 751)
    // if (\is_array($cache_query_string)) == true (line 753)
    // if (!@\unlink($cache_path)) == true (line 766)

    $actual = $this->cI_Output->delete_cache($uri);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDelete_cache17()
{
    $uri = m::mock('UntypedParameter_uri_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($cache_path === '') == true (line 736)
    // if (!\is_dir($cache_path)) == true (line 741)

    $actual = $this->cI_Output->delete_cache($uri);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSet_cache_header0()
{
    $last_modified = m::mock('UntypedParameter_last_modified_');
    $expiration = m::mock('UntypedParameter_expiration_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($_SERVER['HTTP_IF_MODIFIED_SINCE']) && $last_modified <= \strtotime($_SERVER['HTTP_IF_MODIFIED_SINCE'])) == false (line 791)

    $actual = $this->cI_Output->set_cache_header($last_modified, $expiration);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSet_cache_header1()
{
    $last_modified = m::mock('UntypedParameter_last_modified_');
    $expiration = m::mock('UntypedParameter_expiration_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($_SERVER['HTTP_IF_MODIFIED_SINCE']) && $last_modified <= \strtotime($_SERVER['HTTP_IF_MODIFIED_SINCE'])) == true (line 791)

    $actual = $this->cI_Output->set_cache_header($last_modified, $expiration);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}
}
